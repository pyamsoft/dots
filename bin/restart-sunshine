#!/bin/sh

_TYPE=""

_remove_devices() {
  printf -- 'Remove old sunshine devices...\n'
  rm -f "${HOME}/.config/sunshine/sunshine_keyboard" >/dev/null 2>&1
  rm -f "${HOME}/.config/sunshine/sunshine_mouse" >/dev/null 2>&1
  rm -f "${HOME}/.config/sunshine/sunshine_touchscreen" >/dev/null 2>&1
  return 0
}

_kill_firewall() {
  killall firewall-applet >/dev/null 2>&1
  return 0
}

_restart() {
  _display="$1"

  # So that firewall-applet works
  if [ "${_TYPE}" = "wayland" ]; then
    export WAYLAND_DISPLAY="wayland-${_display}"
    printf -- 'Attempt Sunshine restart on wayland: %s\n' "${WAYLAND_DISPLAY}"
  elif [ "${_TYPE}" = "x11" ]; then
    export DISPLAY=":${_display}"
    printf -- 'Attempt Sunshine restart on x11: %s\n' "${DISPLAY}"
  else
    printf -- 'Unknown session type: %s\n' "${_TYPE}"
    return 1
  fi

  printf -- 'Stopping old sunshine service...\n'
  systemctl --user stop sunshine >/dev/null 2>&1

  # Kill any potentially bad symlinks
  _remove_devices || return 1

  printf -- 'Starting new sunshine service...\n'
  systemctl --user restart sunshine >/dev/null 2>&1

  if command -v firewall-applet >/dev/null 2>&1; then
    # Wait a bit
    sleep 2

    # For some reason, sunshine spawns an extra firewall-applet, so kill them all
    printf -- 'Kill firewall-applet to remove duplicate tray icons...\n'

    # Kill all firewall-applet tray icons
    _kill_firewall || return 1

    # And start a new one
    firewall-applet >/dev/null 2>&1 &
  fi

  unset DISPLAY
  unset WAYLAND_DISPLAY
  unset _display
  return 0
}

main() {
  if [ -n "${XDG_SESSION_TYPE}" ]; then
    _TYPE="${XDG_SESSION_TYPE}"
  else
    if [ -z "$1" ]; then
      printf -- 'Must provide a session type: "wayland" or "x11"\n'
      return 1
    fi
    _TYPE="$1"
  fi

  # Must be a recognized type
  case "${_TYPE}" in
    wayland|x11)
      ;;
    *)
      printf -- 'Unknown session type: %s. Must be one of "wayland" "x11"\n' "${_TYPE}"
      return 1
      ;;
  esac

  if _restart "0"; then
    printf -- 'Restarted sunshine service on display :0\n'

    unset _TYPE
    return 0
  else
    printf -- 'Failed to restart sunshine using display 0\n'
  fi

  if _restart "1"; then
    printf -- 'Restarted sunshine service on display 1\n'

    unset _TYPE
    return 0
  else
    printf -- 'Failed to restart sunshine using display 1\n'
  fi

  if _restart "7"; then
    printf -- 'Restarted sunshine service on display 7\n'

    unset _TYPE
    return 0
  else
    printf -- 'Failed to restart sunshine using display 7\n'
  fi

  printf -- 'Failed to restart sunshine using display 0 1 7\n'
  unset _TYPE
  return 1
}

if command -v sunshine >/dev/null 2>&1; then
  main "$@" || exit 1
  exit 0
else
  printf -- 'sunshine is not installed.\n'
  exit 1
fi
