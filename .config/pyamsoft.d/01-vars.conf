# shellcheck shell=bash

# If we have already been sourced, exit out
if [ -n "${PYAMSOFT_VARS}" ]; then
  return 0
fi

if [ -z "$1" ]; then
  # shellcheck disable=SC2016
  printf -- 'Cannot source VARS without providing CONFIG_DIR as $1: %s\n' "$*"
  return 1
fi

if [ -z "$2" ]; then
  # shellcheck disable=SC2016
  printf -- 'Cannot source VARS without providing OS as $2: %s\n' "$*"
  return 1
fi

_cfg="$1"
_os="$2"

# Create the vars
PYAMSOFT_VARS=""

for _vars_script in "${_cfg}"/pyamsoft.d/vars.d/*; do
  # shellcheck disable=SC1090
  [ -r "${_vars_script}" ] && {
    case "${_vars_script}" in
    *.linux)
      if [ "${_os}" = "Linux" ]; then
        . "${_vars_script}" "$@" || {
          printf -- 'Linux VARS setup script failed: args=%s %s\n' "${_vars_script}" "$*"
        }
      fi
      ;;
    *.macos)
      if [ "${_os}" = "Darwin" ]; then
        . "${_vars_script}" "$@" || {
          printf -- 'MacOS VARS setup script failed: %s args=%s\n' "${_vars_script}" "$*"
        }
      fi
      ;;
    *)
      . "${_vars_script}" "$@" || {
        printf -- 'VARS setup script failed: %s args=%s\n' "${_vars_script}" "$*"
      }
      ;;
    esac
  }
  unset _vars_script
done
unset _vars_script

# Mark vars as set up
export PYAMSOFT_VARS

# Set up environment
if [ -z "${PYAMSOFT_ENVIRONMENT}" ]; then
  PYAMSOFT_ENVIRONMENT="vars"
else
  PYAMSOFT_ENVIRONMENT="vars:${PYAMSOFT_ENVIRONMENT}"
fi

return 0
