# shellcheck shell=bash

# If we have already been sourced, exit out
if [ -n "${PYAMSOFT_MACHINE}" ]; then
  return 0
fi

if [ -z "$1" ]; then
  # shellcheck disable=SC2016
  printf -- 'Cannot source MACHINE without providing CONFIG_DIR as $1: %s\n' "$*"
  return 1
fi

if [ -z "$2" ]; then
  # shellcheck disable=SC2016
  printf -- 'Cannot source MACHINE without providing OS as $2: %s\n' "$*"
  return 1
fi

_cfg="$1"
_os="$2"

# Create the machine
PYAMSOFT_MACHINE=""

for _machine_script in "${_cfg}"/pyamsoft.d/machine.d/*; do
  # shellcheck disable=SC1090
  [ -r "${_machine_script}" ] && {
    case "${_machine_script}" in
    *.linux)
      if [ "${_os}" = "Linux" ]; then
        . "${_machine_script}" "$@" || {
          printf -- 'Linux MACHINE setup script failed: args=%s %s\n' "${_machine_script}" "$*"
        }
      fi
      ;;
    *.macos)
      if [ "${_os}" = "Darwin" ]; then
        . "${_machine_script}" "$@" || {
          printf -- 'MacOS MACHINE setup script failed: %s args=%s\n' "${_machine_script}" "$*"
        }
      fi
      ;;
    *)
      . "${_machine_script}" "$@" || {
        printf -- 'MACHINE setup script failed: %s args=%s\n' "${_machine_script}" "$*"
      }
      ;;
    esac
  }
  unset _machine_script
done
unset _machine_script

# Mark machine as set up
export PYAMSOFT_MACHINE

# Set up environment
if [ -z "${PYAMSOFT_ENVIRONMENT}" ]; then
  PYAMSOFT_ENVIRONMENT="machine"
else
  PYAMSOFT_ENVIRONMENT="machine:${PYAMSOFT_ENVIRONMENT}"
fi

return 0
