# shellcheck shell=bash

# If we have already been sourced, exit out
if [ -n "${PYAMSOFT_PATH}" ]; then
  return 0
fi

if [ -z "$1" ]; then
  # shellcheck disable=SC2016
  printf -- 'Cannot source PATH without providing CONFIG_DIR as $1: %s\n' "$*"
  return 1
fi

if [ -z "$2" ]; then
  # shellcheck disable=SC2016
  printf -- 'Cannot source PATH without providing OS as $2: %s\n' "$*"
  return 1
fi

_cfg="$1"
_os="$2"

# Create the path
PYAMSOFT_PATH=""

for _path_script in "${_cfg}"/pyamsoft.d/path.d/*; do
  # shellcheck disable=SC1090
  [ -r "${_path_script}" ] && {
    case "${_path_script}" in
    *.linux)
      if [ "${_os}" = "Linux" ]; then
        . "${_path_script}" "$@" || {
          printf -- 'Linux PATH setup script failed: args=%s %s\n' "${_path_script}" "$*"
        }
      fi
      ;;
    *.macos)
      if [ "${_os}" = "Darwin" ]; then
        . "${_path_script}" "$@" || {
          printf -- 'MacOS PATH setup script failed: %s args=%s\n' "${_path_script}" "$*"
        }
      fi
      ;;
    *)
      . "${_path_script}" "$@" || {
        printf -- 'PATH setup script failed: %s args=%s\n' "${_path_script}" "$*"
      }
      ;;
    esac
  }
  unset _path_script
done
unset _path_script

# Mark path as set up
export PYAMSOFT_PATH

# Clean duplicates from the PATH if any exist
if [ -n "${PATH}" ]; then
  _built_path=""

  # capture the PATH (with a trailing newline for tac)
  # Split the PATH by ':' to get just the chunks
  # Replace each ':' with a newline so tac can reverse the list of lines
  # Discover PATH pieces from "oldest" to "newest", in order
  for _path_piece in $(printf -- '%s\n' "${PATH}" | tr ':' '\n' | tac); do
    case ":${_built_path}:" in
      *:"${_path_piece}":*)
        ;;
      *)
        if [ -z "${_built_path}" ]; then
          _built_path="${_path_piece}"
        else
          _built_path="${_path_piece}:${_built_path}"
        fi
        ;;
    esac
    unset _path_piece
  done
  unset _path_piece

  if [ -n "${_built_path}" ]; then
    PATH="${_built_path}"
    export PATH
  fi

  unset _built_path
fi

# Set up environment
if [ -z "${PYAMSOFT_ENVIRONMENT}" ]; then
  PYAMSOFT_ENVIRONMENT="path"
else
  PYAMSOFT_ENVIRONMENT="path:${PYAMSOFT_ENVIRONMENT}"
fi

return 0
