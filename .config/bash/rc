# shellcheck shell=bash

__launch_starship()
{
  if command -v starship > /dev/null; then
    eval "$(starship init bash)" || return 1
  else
    export PS1='\w
\$ '
  fi

  return 0
}

__increase_ulimit()
{
  if command -v ulimit > /dev/null; then
    # ulimit is normally something like 1024 on Linux or 256 on MacOS
    # This can lead to errors like postgres:too many files open
    # We bump the ulimit up to 2048 in any interactive shell
    _current_ulimit="$(ulimit -S -n)"
    if [ "${_current_ulimit}" -le 2048 ]; then
      ulimit -S -n 2048 || return 1
    fi
    unset _current_ulimit
  fi

  return 0
}

__enable_bash_completion()
{
  # Enable bash completion
  _bcomp="/usr/share/bash-completion/bash_completion"

  [ -r "${_bcomp}" ] && {
    # shellcheck disable=SC1090
    . "${_bcomp}" || return 1
  }

  _bcomp="/etc/bash_completion"
  [ -r "${_bcomp}" ] && {
    # shellcheck disable=SC1090
    . "${_bcomp}" || return 1
  }

  _bcomp="/usr/local/share/bash-completion/bash_completion"
  [ -r "${_bcomp}" ] && {
    # shellcheck disable=SC1090
    . "${_bcomp}" || return 1
  }

  _bcomp="/opt/homebrew/share/bash-completion/bash_completion"
  [ -r "${_bcomp}" ] && {
    # shellcheck disable=SC1090
    . "${_bcomp}" || return 1
  }

  unset _bcomp

  return 0
}

__bash_qol()
{
  _aliases="${XDG_CONFIG_HOME}/bash/aliases"
  [ -f "${_aliases}" ] && {
    # shellcheck disable=SC1090
    . "${_aliases}" || return 1
  }
  unset _aliases

  _functions="${XDG_CONFIG_HOME}/bash/functions"
  [ -f "${_functions}" ] && {
    # shellcheck disable=SC1090
    . "${_functions}" || return 1
  }
  unset _functions

  # Set LS_COLORS
  if command -v vivid > /dev/null; then
    # We are dark if tmux identifies our theme as "macchiato"
    if grep -q \"macchiato\" "${HOME}/.config/tmux/tmux.conf"; then
      export LS_COLORS="$(vivid generate catppuccin-macchiato)"
    else
      export LS_COLORS="$(vivid generate catppuccin-latte)"
    fi
  elif command -v gdircolors > /dev/null; then
    eval "$(gdircolors -b)" || return 1
  elif command -v dircolors > /dev/null; then
    eval "$(dircolors -b)" || return 1
  fi

  return 0
}

__ensure_env()
{
  # Source bash_profile if the environment is not setup
  if [ -z "${PYAMSOFT_ENVIRONMENT}" ]; then
    [ -f "${HOME}"/.bash_profile ] && {
      # shellcheck disable=SC1091
      . "${HOME}"/.bash_profile || return 1
    }
  fi

  return 0
}

__direnv()
{
  # Source bash_profile if the environment is not setup
  if command -v direnv > /dev/null; then
    eval "$(direnv hook bash)" || return 1
  fi

  return 0
}

__bashrc()
{
  __ensure_env || {
    printf -- '[bashrc] Failed to setup environment\n'
    return 0
  }

  __bash_qol || {
    printf -- '[bashrc] Failed to setup bash QOL features\n'
    return 0
  }

  __enable_bash_completion || {
    printf -- '[bashrc] Failed to setup bash shell completion\n'
    return 0
  }

  __direnv || {
    printf -- '[bashrc] Failed direnv setup\n'
    return 0
  }

  __increase_ulimit || {
    printf -- '[bashrc] Failed to increase ulimit\n'
    return 0
  }

  __launch_starship || {
    printf -- '[bashrc] Failed to launch starship\n'
    return 0
  }

  return 0
}

# Never return bad from here, bashrc must never fail
__bashrc || {
    printf -- '[bashrc] Error during setup\n'
}

# Do not export the functions
unset -f __bashrc
unset -f __increase_ulimit
unset -f __enable_bash_completion
unset -f __launch_starship
unset -f __bash_qol
unset -f __ensure_env
unset -f __direnv

# vim: set syntax=sh tabstop=2 softtabstop=2 shiftwidth=2 shiftround:
