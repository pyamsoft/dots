# shellcheck shell=bash

# https://stackoverflow.com/questions/79363107/how-to-ensure-that-a-lazily-loaded-bash-completion-is-loaded

# Load the completion for a given command
#
# This function can be called by our completion handlers in completions.d
#
# shellcheck disable=SC2317
load_bash_completion() {
    local cmd="$1"
    if declare -f _comp_load >/dev/null 2>&1; then
        if ! _comp_load "${cmd}"; then
            printf -- "_comp_load failed to load completion for '%s'\n" "${cmd}" >&2
            return 1
        fi
    elif declare -f __load_completion >/dev/null 2>&1; then
        if ! __load_completion "${cmd}"; then
            printf -- "__load_completion failed to load completion for '%s'\n" "${cmd}" >&2
            return 1
        fi
    else
        printf -- "__load_completion and _comp_load do not exist\n" >&2
        return 1
    fi

    return 0
}

# Whatever the comp spec is for cmd, use the same comp spec for my_cmd
# For example, complete -p scp -> `complete -o bashdefault -F _comp_cmd_scp`
# Then we run `complete -o bashdefault -F _comp_cmd_scp scp my_scp`
# We don't need to parse anything, we just need to add another positional
# argument at the end of the complete command.
#
# This function can be called by our completion handlers in completions.d
#
# shellcheck disable=SC2317
alias_completion() {
    local cmd="$1"
    local my_cmd="$2"

    load_bash_completion "${cmd}"

    if ! spec="$(complete -p "${cmd}")"; then
        printf -- "Error getting completion specification for '%s'\n" "${cmd}" >&2
    fi

    ${spec} "${my_cmd}"

    unset cmd
    unset my_cmd
}

os="$(uname)"

for script in "${HOME}"/.bash_completion.d/* "${XDG_CONFIG_HOME}"/bash/completions.d/*; do
    # Sometimes os can get unset. Reset it here
    if [ -z "${os}" ]; then
        os="$(uname)"
    fi

    # shellcheck disable=SC1090
    [ -r "${script}" ] && {
        case "${script}" in
        *.linux)
            if [ "${os}" = "Linux" ]; then
                . "${script}" || {
                    printf -- 'Linux bash_completion setup script failed: %s\n' "${script}"
                }
            fi
            ;;
        *.macos)
            if [ "${os}" = "Darwin" ]; then
                . "${script}" || {
                    printf -- 'MacOS bash_completion setup script failed: %s\n' "${script}"
                }
            fi
            ;;
        *)
            . "${script}" || {
                printf -- 'bash_completion setup script failed: %s\n' "${script}"
            }
            ;;
        esac
    }
    unset script
done
unset script

unset os

unset load_bash_completion
unset alias_completion
