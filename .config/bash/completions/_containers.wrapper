# shellcheck shell=bash

# bash completion support for containers script
if ! declare -f __containers >/dev/null 2>&1; then
  __containers() {
    COMPREPLY=()
    local prev="${COMP_WORDS[COMP_CWORD - 1]}"
    local cur="${COMP_WORDS[COMP_CWORD]}"
    local commands="ps logs images inspect reload disable restart status stop checkup pid prune pull teardown exec shell stats"

    _reply() {
      # shellcheck disable=SC2207
      COMPREPLY=($(compgen -W "$1" -- "$2"))
    }

    _select() {
      local cmd="$1"

      case "$2" in
      ps | pull | checkup | prune | reload)
        # No further arguments
        COMPREPLY=()
        ;;
      logs | images | inspect | pid | exec | teardown | disable | restart | status | stop | stats)
        # Offer contains
        _reply "$("${cmd}" ps --noheading --format '{{ .Names }}')" "$4"
        ;;
      *)
        # Nothing, fill with suggestions
        _reply "$3" "$4"
        ;;
      esac

      unset cmd
      return 0
    }

    _strip() {
      printf -- '%s' "$1" | tr -d '[:space:]'
    }

    if [ "${COMP_CWORD}" -le 1 ]; then
      # Not enough commands, default
      _reply "${commands}" "${cur}"
      return
    fi

    if [ -n "${prev}" ]; then
      local _previous
      _previous="$(_strip "${prev}")"

      if [ -n "${_previous}" ]; then
        _select "$1" "${_previous}" "${commands}" "${cur}"
        return
      fi
    fi

    if [ -n "${cur}" ]; then
      local _current
      _current="$(_strip "${cur}")"

      if [ -n "${_current}" ]; then
        _select "$1" "${_current}" "${commands}" "${cur}"
        return
      fi
    fi

    # Nothing at all, fill with suggestions
    _reply "${commands}" "${cur}"
  }
fi
