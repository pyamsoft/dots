# shellcheck shell=bash

# Arguments always provided as:
#
# $1 - CONFIG_DIR
# $2 - OS

if [ -z "$1" ]; then
  # shellcheck disable=SC2016
  printf -- 'Cannot source bash/functions without providing CONFIG_DIR as $1: %s\n' "$*"
  return 1
fi

if [ -z "$2" ]; then
  # shellcheck disable=SC2016
  printf -- 'Cannot source bash/functions without providing OS as $2: %s\n' "$*"
  return 1
fi

_cfg="$1"
_os="$2"

for _func in "${HOME}"/.bash_functions.d/* "${_cfg}"/bash/functions.d/*; do
  # shellcheck disable=SC1090
  [ -r "${_func}" ] && {
    case "${_func}" in
    *.linux)
      if [ "${_os}" = "Linux" ]; then
        . "${_func}" || {
          printf -- 'Linux bash/functions setup script failed: %s args=%s\n' "${_func}" "$*"
        }
      fi
      ;;
    *.macos)
      if [ "${_os}" = "Darwin" ]; then
        . "${_func}" || {
          printf -- 'MacOS bash/functions setup script failed: %s args=%s\n' "${_func}" "$*"
        }
      fi
      ;;
    *)
      . "${_func}" || {
        printf -- 'bash/functions setup script failed: %s args=%s\n' "${_func}" "$*"
      }
      ;;
    esac
  }
  unset _func
done
unset _func

return 0
