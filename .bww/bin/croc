#!/bin/sh

# This file is autogenerated by bwrapper, modifications may be
# overwritten by the script.

# This script expects the 'bww' script to be available to the user somewhere
# on the $PATH. It will fail if the situation proves otherwise.

readonly arguments="--private"
readonly command_name="/usr/bin/croc"

if [ "$1" = "--" ]; then
  # Stop bww argument parsing (in case the command you want to run is actually called "shell")
  # To pass a '--' argument to the wrapped program, you must pass -- again so
  #
  # $ my_program -A -B -C -- x y z      =>
  # $ my_program -- -A -B -C -- x y z
  shift

  # shellcheck disable=SC2086
  cur="$(pwd)"
  if [ "${HOME}" != "${cur}" ]; then
    exec bww $arguments --bind-if-exists "${HOME}" --bind-if-exists "${cur}" "${command_name}" "$@"
  else
    exec bww $arguments --bind-if-exists "${HOME}" "${command_name}" "$@"
  fi
elif [ "$1" = "shell" ]; then
  # Launch a shell in the environment
  shift

  # No extra arguments for shells

  # shellcheck disable=SC2086
  cur="$(pwd)"
  if [ "${HOME}" != "${cur}" ]; then
    exec bww $arguments --bind-if-exists "${HOME}" --bind-if-exists "${cur}" --shell "${command_name}" "$@"
  else
    exec bww $arguments --bind-if-exists "${HOME}" --shell "${command_name}" "$@"
  fi
else
  # shellcheck disable=SC2086
  cur="$(pwd)"
  if [ "${HOME}" != "${cur}" ]; then
    exec bww $arguments --bind-if-exists "${HOME}" --bind-if-exists "${cur}" "${command_name}" "$@"
  else
    exec bww $arguments --bind-if-exists "${HOME}" "${command_name}" "$@"
  fi
fi
