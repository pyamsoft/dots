#!/bin/sh

if [ "$(id -u)" -eq 0 ]; then
  printf -- 'You must run this as a rootless container\n'
  exit 1
fi

# Let it daemonize
if [ "$1" = "-d" ] || [ "$1" = "--detach" ]; then
  shift
  _how="-d"
else
  _how="--rm"
fi
readonly _how

readonly _name="postgres"
readonly _image="docker.io/postgres:15"

readonly _mount1="${HOME}/.local/etc/containers/${_name}/data"

# Prep the directories
mkdir -p "${_mount1}" || exit 1

# Use docker or podman (priority podman)
_cmd="docker"
if command -v podman > /dev/null; then
  _cmd="podman"
fi
readonly _cmd

# On MacOS we need to own the files to chown them
# because just VM things
if [ "$(uname)" = "Darwin" ]; then
  _user="--user=$(id -u):$(id -g)"
else
  _user=""
fi

# Log the commands we use next
# Fail on errors
# Fail on unassigned
set -xeu

# Don't quote so that if user is empty it still expands
#
# shellcheck disable=SC2086
exec ${_cmd} run ${_how} \
  --name "${_name}" --hostname "${_name}" --pull never \
  --security-opt no-new-privileges:true --cap-drop ALL \
  --mount type=bind,source="${_mount1}",target=/var/lib/postgresql/data \
  -p 127.0.0.1:5432:5432/tcp \
  --cap-add DAC_OVERRIDE \
  --cap-add CHOWN \
  --cap-add SETGID \
  --cap-add SETUID \
  -e POSTGRES_PASSWORD=mysecretpostgrespasswd \
  ${_user} \
  "${_image}" "$@"
