#!/bin/sh

readonly _name="httpie"
readonly _image="docker.io/alpine/httpie"
readonly _tag="3.2.2"

# Use podman, don't use docker
readonly _cmd="podman"

_prep_mounts() {
  _mounts=""
  # No mounts
  readonly _mounts
  return 0
}

_prep_caps() {
  _caps=""

  # No caps

  readonly _caps
  return 0
}

_prep_ports() {
  _ports=""

  # No ports

  readonly _ports
  return 0
}

_check_user() {
  if [ "$(id -u)" -eq 0 ]; then
    printf -- 'You must run this as a rootless container\n'
    return 1
  fi

  _userns=""
  # No user namespace
  readonly _userns

  return 0
}

_prep_network() {
  # shellcheck disable=SC2086
  ${_cmd} network create \
    --ignore \
    --disable-dns \
    --driver "bridge" \
    "${_name}" >/dev/null || {
    printf -- 'Failed to create network bridge: %s\n' "${_name}"
    return 1
  }

  return 0
}

_containerize() {
  # Log the commands we use next
  # Fail on errors
  # Fail on unassigned
  set -xeu

  # Don't quote so that if user is empty it still expands
  #
  # shellcheck disable=SC2086
  exec ${_cmd} run ${_how} \
    --security-opt no-new-privileges:true --cap-drop ALL \
    --add-host "localhost:127.0.0.1" \
    --network="${_name}" \
    ${_mounts} \
    ${_ports} \
    ${_caps} \
    ${_userns} \
    "${_image}:${_tag}" "$@"
}

main() {
  _check_user || return 1
  _prep_mounts || return 1
  _prep_ports || return 1
  _prep_caps || return 1
  _prep_network || return 1

  # How do we run?
  _how="--rm -i -t"
  readonly _how

  _containerize "$@" || return 1
  return 0
}


main "$@" || exit 1
exit 0
