#!/bin/sh

readonly _name="weewoo"
readonly _image="localhost/pyamsoft/weewoo"
readonly _tag="latest"

# Use podman, don't use docker
readonly _cmd="podman"

_prep_mounts() {
  _mounts=""
  readonly _mounts
  return 0
}

_prep_caps() {
  _caps=""
  readonly _caps
  return 0
}

_prep_ports() {
  _ports=""
  readonly _ports
  return 0
}

_check_user() {
  if [ "$(id -u)" -eq 0 ]; then
    printf -- 'You must run this as a rootless container\n'
    return 1
  fi

  # Expects to be root (since the cert file is owned by root)
  _userns=""

  readonly _userns
}

_containerize() {
  # Only compare the version minors, since bc only can do floating point, not semver :(
  _is_cmd_new_enough="$(printf -- '%s >= 4.7\n' "$(podman --version | awk '{ print $3 }' | tr '.' ' ' | awk '{ print $1 "." $2}')" | bc)"

  # We don't use --security-opt no-new-privileges:true since
  # the AWS VPS that this runs on does not support that option
  _sec="--cap-drop=ALL"
  if [ 1 -eq "${_is_cmd_new_enough}" ]; then
    _sec="${_sec} --security-opt no-new-privileges:true"
  fi
  readonly _sec

  # MacOS can't launch with host-gateway
  _network="--add-host localhost:127.0.0.1 --dns 1.1.1.1 --dns-search=."
  if [ "$(uname)" = "Linux" ] && [ 1 -eq "${_is_cmd_new_enough}" ]; then
    _network="${_network} --add-host host.containers.internal:host-gateway"
  fi
  readonly _network

  unset _is_cmd_new_enough

  # Log the commands we use next
  # Fail on errors
  # Fail on unassigned
  set -xeu

  # Don't quote so that if user is empty it still expands
  #
  # shellcheck disable=SC2086
  exec ${_cmd} run ${_how} \
    --name "${_name}" --hostname "${_name}" \
    --init \
    ${_network} \
    ${_sec} \
    ${_mounts} \
    ${_ports} \
    ${_caps} \
    ${_userns} \
    "${_image}:${_tag}" "$@"
}

main() {
  _check_user || return 1
  _prep_mounts || return 1
  _prep_ports || return 1
  _prep_caps || return 1

  # How do we run?
  if [ "$1" = "-d" ] || [ "$1" = "--detach" ]; then
    shift
    _how="-d --restart=unless-stopped"
  else
    _how="--rm -i -t"
  fi
  readonly _how

  _containerize "$@" || return 1
  return 0
}

main "$@" || exit 1
exit 0

