#!/bin/sh

##
# Get the hostname
if [ -n "${HOSTNAME}" ]; then
  _hostname="${HOSTNAME}"
elif command -v hostname > /dev/null; then
  _hostname="$(hostname)"
elif command -v hostnamectl > /dev/null; then
  _hostname="$(hostnamectl)"
else
  printf -- "[gametime] Can't get the machine hostname :( Who am I?"
  exit 1
fi

# For gamescope, the following is needed
# --devices=all;shm; is needed for Steam overlay and Steam input
# --env SDL_VIDEODRIVER=x11 must be set on the flatpak itself, not just in this file.
# You must use Proton-GE from within a flatpak, since Steam pressure-vessel messes up gamescope
# You must use Super+U to enable FSR in game

# S3TC texture filtering
export force_s3tc_enable=true

# Ignore forced TearFree display sync
export vblank_mode=0

# Fix weird texture bugs
# https://github.com/Plagman/gamescope/issues/320
export AMD_DEBUG=nodcc
export RADV_DEBUG=nodcc

# May fix VKD3D issues
# https://www.reddit.com/r/linux_gaming/comments/119hwmt/this_setting_may_help_vkd3d_games_that_have/
export VKD3D_CONFIG=no_upload_hvv

# gamescope
# https://github.com/Plagman/gamescope
#
# Run games in Fullscreen at the nested resolution (which should be shown as the only FS res)
# FSR is between 0 (max) and 20 (min) instead of 0-5. Default is 2 => 8
#
# NOTE: Shouldn't crash if the environment sets SDL_VIDEODRIVER=x11
#
# NOTE: If we only provide a height, gamescope will assume the width as 16x9
#
# NOTE: ReadyOrNot has a minimum of 1368x768, change the config file and do not touch settings to have it be lower
#       If you open the settings in game, your FPS will go to 2.
#
# NOTE: Slay the Spire won't launch in Fullscreen if the resolution is below 1280x720, use Windowed mode
#
# NOTE: FSR performance is 2.0x nested resolution.
# NOTE: FSR balanced is 1.7x nested resolution.
# NOTE: FSR quality is 1.5x nested resolution.
#
# NOTE: Do not apply any FSR sharpness with gamescope, we will use vkBasalt for that
# NOTE: Shell math doesn't like decimals, so divide stuff by 10 instead
if [ "${_hostname}" = "nerd1" ]; then
  target_width="1440"
  target_height="900"
  window_type="--borderless"
elif [ "${_hostname}" = "nerd2" ]; then
  target_width="1920"
  target_height="1080"
  window_type="--fullscreen"
else
  printf -- '[gametime] Unable to decide window dimensions from hostname: "%s"\n' "${_hostname}"
  exit 1
fi

# Set max FPS
readonly fps_max=75

# Options passed to gamescope session
gamescope_options="--output-width ${target_width} --output-height ${target_height} --nested-refresh ${fps_max} --nested-unfocused-refresh 30 ${window_type}"

# If a game supports FSR natively, pass `GAME_FSR=1` to the environment when running
# gametime so that gamescope will not apply its rougher implementation of FSR1.
if [ -z "${GAME_FSR}" ] || [ "${GAME_FSR}" -eq 0 ]; then
  # This game needs our gamescope FSR
  # Since gamescope FSR is only 1x (bad), we use quality mode because it otherwise looks real bad.
  # If a game implements its own native upscaling, use that instead with Balanced or Performance FSR 2x
  readonly fsr_level="15"
  gamescope_options="${gamescope_options} --nested-width $((target_width * 10 / fsr_level)) --nested-height $((target_height * 10 / fsr_level))"
  gamescope_options="${gamescope_options} --fsr-upscaling --fsr-sharpness 20"
else
  # This game has its own FSR, pass our target dimensions directly
  gamescope_options="${gamescope_options} --nested-width ${target_width} --nested-height ${target_height}"
fi

# vkBasalt
# https://github.com/DadSchoorse/vkBasalt
#
# Use with vkBasalt.conf to enable better CAS in games (gamescope has sharpening but it kinda sux)

# The game environment
# gamescope must call these tools directly instead of setting them in the outside environment
game_environment="ENABLE_VKBASALT=1"

# Extra tools to run as a wrapper
game_tools="mangohud"

# Default arguments passed to games
# These are common values that attempt to disable startup splash screens
# Common Source engine max fps
game_arguments="-novid -nosplash -nostartupmovies +fps_max ${fps_max}"

# Mangohud
# https://github.com/flightlessmango/MangoHud#hud-configuration
#
# We cannot export MANGOHUD=1 before gamescope as it will crash or not report correctly.
# We must use gamescope to run mangohud, and then use mangohud to run our command.
export MANGOHUD_CONFIG="fps,cpu_temp,gpu_temp,ram,vram,swap,cpu_mhz,core_load,gpu_core_clock,gpu_mem_clock,fps_limit=${fps_max},gl_vsync=0,vsync=1,resolution,show_fps_limit,vkbasalt,gamemode,font_size=18,no_display"

# OBS VKCapture
# https://github.com/nowrep/obs-vkcapture
#
# Depending on steam vs others, we set te OBS_VKCAPTURE at a different scope

# If we are running in steam, add --steam option, otherwise do not (causes weird window issues)
if [ "${FLATPAK_ID}" = "com.valvesoftware.Steam" ]; then
  gamescope_options="${gamescope_options} --steam"
  game_environment="${game_environment} OBS_VKCAPTURE=1"
elif [ "${FLATPAK_ID}" = "com.heroicgameslauncher.hgl" ]; then
  # For not Steam, we export this var here instead of within gamescope session
  export OBS_VKCAPTURE=1
fi

# shellcheck disable=SC2086
exec gamescope ${gamescope_options} -- env ${game_environment} ${game_tools} "$@" ${game_arguments}
