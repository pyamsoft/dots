##
# Maintainer: pyamsoft <developer(dot)pyamsoft(at)gmail(dot)com>
##

# shellcheck disable=SC2034
pkgname=pyamsoft-settings
# shellcheck disable=SC2034
pkgdesc="pyamsoft Settings"
# shellcheck disable=SC2034
pkgver=v2488.81131921
# shellcheck disable=SC2034
pkgrel=1
# shellcheck disable=SC2034
arch=('any')
# shellcheck disable=SC2034
makedepends=('git')
# shellcheck disable=SC2034
depends=()
# shellcheck disable=SC2034
optdepends=()
# shellcheck disable=SC2034
provides=('pyamsoft-settings')
# shellcheck disable=SC2034
conflicts=('pyamsoft-settings')
# shellcheck disable=SC2034
license=('GPL2')
url="https://github.com/pyamsoft/dots.git"

##
# The SHA256 is constantly changing since this is
# pulled from git so skip the verification check
##
# shellcheck disable=SC2034
source=("git+${url}#branch=main")
# shellcheck disable=SC2034
sha256sums=('SKIP')

pkgver() {
  # shellcheck disable=SC2154
  cd "${srcdir}/dots" || {
    msg "Failed to cd into ${srcdir}/dots"
    return 1
  }

  printf "v%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

_package__hostname() {
  if command -v hostnamectl >/dev/null; then
    hostnamectl hostname || return 1
  elif command -v hostname >/dev/null; then
    hostname || return 1
  fi

  return 0
}

_package_install() {
  _package_install__src_dir="$1"
  _package_install__install_dir="$2"
  _package_install__file="$3"
  _package_install__dir_chmod="$4"
  _package_install__file_chmod="$5"

  msg2 "INSTALL: ${_package_install__src_dir}/${_package_install__file} -> ${_package_install__file}"

  # Setup directory
  mkdir -p "${_package_install__install_dir}" || {
    error "Failed to create install directory: ${_package_install__install_dir}"
    return 1
  }
  chmod "${_package_install__dir_chmod}" "${_package_install__install_dir}" || {
    error "Failed to chmod install directory: ${_package_install__install_dir}"
    return 1
  }

  # Install file
  cp "${_package_install__src_dir}/${_package_install__file}" "${_package_install__install_dir}" || {
    error "Failed to copy install file: ${_package_install__src_dir}/${_package_install__file}"
    return 1
  }
  chmod "${_package_install__file_chmod}" "${_package_install__install_dir}/${_package_install__file}" || {
    error "Failed to chmod install file: ${_package_install__install_dir}/${_package_install__file}"
    return 1
  }

  # Replace any placeholders
  sed --in-place "s/<<MY_USER>>/${_my_username}/g" "${_package_install__install_dir}/${_package_install__file}"

  unset _package_install__file_chmod
  unset _package_install__dir_chmod
  unset _package_install__src_dir
  unset _package_install__install_dir
  unset _package_install__file
  return 0
}

package() {
  # shellcheck disable=SC2154
  cd "${srcdir}/dots/dots/scripts/linux/pyamsoft-settings" || {
    msg "Failed to cd into ${srcdir}/dots/dots/scripts/linux/pyamsoft-settings"
    return 1
  }

  # We may want different codepaths for different machines
  _my_hostname="$(_package__hostname)"

  # This is an assumption that the user account you would consider "my user" is UID 1000
  # at this point in the script, we are running as fakeroot, so we have to hard-assume this
  _my_username="$(id -un 1000)"

  # Turn on globbing options (bash specific, but PKGBUILDs are run in bash right?)
  shopt -s globstar nullglob

  # Loop through etc
  for _file_or_folder in ./etc/**/*; do
    # Skip folders
    if [ -d "${_file_or_folder}" ]; then
      continue
    fi

    _file_dir="$(dirname "${_file_or_folder}")"
    _file_name="$(basename "${_file_or_folder}")"

    # shellcheck disable=SC2154
    _install_dir="${pkgdir}/${_file_dir#\.\/}"

    case "${_file_dir}" in
    */sudoers.d)
      _package_install "${_file_dir}" "${_install_dir}" "${_file_name}" "750" "600" || return 1
      ;;
    *)
      _package_install "${_file_dir}" "${_install_dir}" "${_file_name}" "755" "644" || return 1
      ;;
    esac

    unset _install_dir
    unset _file_dir
    unset _file_name
    unset _file_or_folder
  done
  unset _file_or_folder

  # Loop through opt
  for _file_or_folder in ./opt/**/*; do
    # Skip folders
    if [ -d "${_file_or_folder}" ]; then
      continue
    fi

    _file_dir="$(dirname "${_file_or_folder}")"
    _file_name="$(basename "${_file_or_folder}")"

    # shellcheck disable=SC2154
    _install_dir="${pkgdir}/${_file_dir#\.\/}"

    case "${_my_hostname}" in
    nerd1)
      case "${_file_name}" in
      crowdsec* | cscli | home-assistant | caddy | ddns)
        msg2 "SKIP INSTALL ${_install_dir}/${_file_name} on ${_my_hostname}"
        continue
        ;;
      *) ;;
      esac
      ;;
    nerd2)
      case "${_file_name}" in
      gamelaunch | ddns)
        msg2 "SKIP INSTALL ${_install_dir}/${_file_name} on ${_my_hostname}"
        continue
        ;;
      *) ;;
      esac
      ;;
    aws*) ;;
    *) ;;
    esac

    _package_install "${_file_dir}" "${_install_dir}" "${_file_name}" "755" "755" || return 1

    unset _install_dir
    unset _file_dir
    unset _file_name
    unset _file_or_folder
  done
  unset _file_or_folder

  unset _my_hostname
}
