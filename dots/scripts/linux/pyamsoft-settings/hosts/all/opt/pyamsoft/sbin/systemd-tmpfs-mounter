#!/bin/sh

# Splits up a user:path argument provided to a systemd instance unit
# and pass the expected format over to `tmpfs-mounter`
#
# Expected format is <user>:<escaped-path>[:mode]

main() {
  _cmd="$1"
  _instance="$2"

  if [ -z "${_cmd}" ]; then
    printf -- 'Missing command, not forwarding to tmpfs-mounter.\n'

    unset _cmd
    unset _instance
    return 1
  fi

  if [ -z "${_instance}" ]; then
    printf -- 'Missing instance, not forwarding to tmpfs-mounter.\n'

    unset _cmd
    unset _instance
    return 1
  fi

  # Split the instance by colon
  _split="$(printf -- '%s' "${_instance}" | /bin/tr ':' ' ')"
  unset _instance

  # Grab the user and path (path is escaped by systemd)
  _user="$(printf -- '%s' "${_split}" | /bin/awk '{ print $1 }')"
  _path="$(printf -- '%s' "${_split}" | /bin/awk '{ print $2 }')"
  _mode="$(printf -- '%s' "${_split}" | /bin/awk '{ print $3 }')"
  unset _split

  # Fix the path
  _unescaped_path="$(/bin/systemd-escape --unescape -- "${_path}")"
  unset _path

  # Pass to tmpfs-mounter
  if [ -n "${_mode}" ]; then
    exec /opt/pyamsoft/sbin/tmpfs-mounter "${_cmd}" "${_unescaped_path}" "${_user}" "mode=${_mode}"
  else
    exec /opt/pyamsoft/sbin/tmpfs-mounter "${_cmd}" "${_unescaped_path}" "${_user}"
  fi
}

main "$@" || exit 1
exit 0
