#!/bin/sh

# A list of jail PIDs we have already printed out
_ALREADY_SEEN_PIDS=""

_extract_jail() {
  _jail_line="$1"

  _jail_owner="$(printf -- '%s' "${_jail_line}" | awk '{ print $1 }')"
  _jail_program="$(printf -- '%s' "${_jail_line}" | grep -o 'JAIL_PROGRAM [[:graph:]]* ' | awk '{ print $2 }')"
  _jail_name="$(printf -- '%s' "${_jail_line}" | grep -o 'JAIL_NAME [[:graph:]]* ' | awk '{ print $2 }')"
  _jail_pid="$(printf -- '%s' "${_jail_line}" | grep -o 'JAIL_PID [0-9]* ' | awk '{ print $2 }')"

  if [ -n "${_jail_pid}" ]; then
    for _pid in ${_ALREADY_SEEN_PIDS}; do
      if [ "${_pid}" = "${_jail_pid}" ]; then
        unset _jail_owner
        unset _jail_pid
        unset _jail_program
        unset _jail_line
        unset _jail_name
        return 0
      fi
    done
  fi

  _ALREADY_SEEN_PIDS="${_ALREADY_SEEN_PIDS} ${_jail_pid}"
  printf -- '[%s] %s %s (%s)\n' "${_jail_owner}" "${_jail_pid}" "${_jail_program}" "${_jail_name}"

  unset _jail_owner
  unset _jail_pid
  unset _jail_program
  unset _jail_line
  unset _jail_name
  return 0
}

_list_jails() {
  # shellcheck disable=SC2009
  printf -- '%s\n' "$(ps aux | grep JAIL_PID | grep -v grep)"
}

_check_prereq() {
  if ! command -v ps >/dev/null; then
    printf -- 'Must have "ps" command.\n'
    return 1
  fi
  if ! command -v grep >/dev/null; then
    printf -- 'Must have "grep" command.\n'
    return 1
  fi
  if ! command -v awk >/dev/null; then
    printf -- 'Must have "awk" command.\n'
    return 1
  fi
  return 0
}

main() {
  _check_prereq || return 1

  readonly _old_ifs="${IFS}"
  readonly _new_ifs="
"
  IFS="${_new_ifs}"
  _all_jails="$(_list_jails)"
  for _j in ${_all_jails}; do
    IFS="${_old_ifs}"
    _extract_jail "${_j}" || return 1
    IFS="${_new_ifs}"
  done
  IFS="${_old_ifs}"
}

main "$@" || exit 1
exit 0
