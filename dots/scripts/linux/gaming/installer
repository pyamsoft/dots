#!/bin/sh

##
# Installer
#
# $1 flatpak app name
# $2 script to install from this directory
_installer() {
  app_name="$1"
  target="$2"
  script="$3"
  mark="$4"
  current_directory="$(pwd)"

  printf -- 'Attempt install script %s into flatpak app %s\n' "${script}" "${app_name}"

  if [ -d "${HOME}/.var/app/${app_name}" ]; then
    cd "${HOME}/.var/app/${app_name}" || {
      printf -- 'Failed to cd into flatpak app directory: %s\n.' "${app_name}"
      return 1
    }

    mkdir -p "${target}" || {
      printf -- 'Failed to create %s directory for app: %s\n' "${target}" "${app_name}"
      return 2
    }

    t="${target}/$(basename "${script}")"

    cp -f "${current_directory}/${script}" "$t" || {
      printf -- 'Failed to copy script %s into %s directory for app: %s\n' "${script}" "${target}" "${app_name}"
      return 3
    }

    if [ "${mark}" -eq 1 ]; then
      chmod +x "$t" || {
        printf -- 'Failed to mark script %s executable for app: %s\n' "${script}" "${app_name}"
        return 4
      }
    else
      chmod -x "$t" || {
        printf -- 'Failed to mark script %s unexecutable for app: %s\n' "${script}" "${app_name}"
        return 4
      }
    fi

    cd "${current_directory}" || {
      printf -- 'Failed to cd out of flatpak app directory: %s back to %s\n.' "${app_name}" "${current_directory}"
      return 5
    }

    printf -- '    %s installed for flatpak app %s\n' "${script}" "${app_name}"

    unset t
    unset app_name
    unset target
    unset script
    unset mark
    unset current_directory
  fi

  return 0
}

_local_install() {
  script="$1"
  target="$2"
  current_directory="$(pwd)"

  printf -- 'SUDO: Attempt local install script %s into target %s/bin\n' "${script}" "${target}"

  t="${target}/bin/$(basename "${script}")"

  sudo cp -f "${current_directory}/${script}" "$t" || {
    printf -- 'Failed to copy script %s into host %s\n' "${script}" "${target}"
    return 1
  }

  sudo chown "$(basename "${target}"):$(basename "${target}")" "$t" || {
    printf -- 'Failed to own script %s as target user %s\n' "${script}" "$(basename "${target}")"
    return 1
  }

  sudo chmod 700 "$t" || {
    printf -- 'Failed to mark script %s executable for host %s\n' "${script}" "${target}"
    return 2
  }

  printf -- 'SUDO:    %s installed for %s\n' "${script}" "$t"

  unset t
  unset target
  unset script
  unset current_directory
  return 0
}

_jail_install() {
  script="$1"
  target="$2"
  current_directory="$(pwd)"

  printf -- 'Attempt local install script %s into jail %s/bin\n' "${script}" "${target}"

  jail="${HOME}/.local/etc/jails/${target}"
  jail_bindir="${jail}/home/.local/bin"

  if [ ! -d "${jail}" ]; then
    printf -- 'Ignore local install of %s into jail %s, does not exist.\n' "${script}" "${target}"
    return 0
  fi

  t="${jail_bindir}/$(basename "${script}")"

  mkdir -p "${jail_bindir}" || {
    printf -- 'Failed to make jail directory %s\n' "${jail_bindir}"
    return 1
  }

  chmod 700 "$t" || {
    printf -- 'Failed to mark script %s executable for jail %s\n' "${script}" "${target}"
    return 2
  }

  printf -- '    %s installed for %s\n' "${script}" "$t"

  unset t
  unset jail
  unset jail_bindir
  unset target
  unset script
  unset current_directory
  return 0
}

_installer "com.heroicgameslauncher.hgl" ".local/bin" "gametime" 1 || exit 1
_installer "com.valvesoftware.Steam" ".local/bin" "gametime" 1 || exit 1
_installer "io.openrct2.OpenRCT2" ".local/bin" "gametime" 1 || exit 1
_installer "com.pokemmo.PokeMMO" ".local/bin" "gametime" 1 || exit 1
_installer "org.DolphinEmu.dolphin-emu" ".local/bin" "gametime" 1 || exit 1
_installer "com.usebottles.bottles" ".local/bin" "gametime" 1 || exit 1

_installer "com.heroicgameslauncher.hgl" "config/vkBasalt" "vkBasalt.conf" 0 || exit 1
_installer "com.valvesoftware.Steam" "config/vkBasalt" "vkBasalt.conf" 0 || exit 1
_installer "io.openrct2.OpenRCT2" "config/vkBasalt" "vkBasalt.conf" 0 || exit 1
_installer "com.pokemmo.PokeMMO" "config/vkBasalt" "vkBasalt.conf" 0 || exit 1
_installer "org.DolphinEmu.dolphin-emu" "config/vkBasalt" "vkBasalt.conf" 0 || exit 1
_installer "com.usebottles.bottles" "config/vkBasalt" "vkBasalt.conf" 0 || exit 1

_installer "io.openrct2.OpenRCT2" ".local/bin" "openrct2/gametime-openrct2" 1 || exit 1
_installer "com.pokemmo.PokeMMO" ".local/bin" "pokemmo/gametime-pokemmo" 1 || exit 1
_installer "org.DolphinEmu.dolphin-emu" ".local/bin" "dolphin-emu/gametime-dolphin-emu" 1 || exit 1

# If we have gamescope locally, maybe we want this script too
if command -v gamescope >/dev/null; then
  # Gaming as another user
  for _u in /home/gaming-*; do
    case "${_u}" in
      gaming-\*)
        ;;
      *)
        _local_install "gametime" "${_u}" || exit 1
        ;;
    esac
  done

  # Jails
  _jail_install "gametime" "heroic"
  _jail_install "gametime" "steam"
  _jail_install "gametime" "dolphin-emu"
  _jail_install "gametime" "openrct2"
  _jail_install "gametime" "tetrio"
fi

exit 0
