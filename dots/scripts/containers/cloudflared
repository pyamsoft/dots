#!/bin/sh

readonly _name="cloudflared"
readonly _image="docker.io/cloudflare/cloudflared"
readonly _tag="1414-cb4bd8d06572"

# Use docker or podman (priority podman)
_cmd="sudo docker"
if command -v podman >/dev/null; then
  _cmd="podman"
fi
readonly _cmd

# Let it daemonize
if [ "$1" = "-d" ] || [ "$1" = "--detach" ]; then
  shift
  _how="-d"
else
  _how="--rm"
fi
readonly _how

# On MacOS we use a VM, make sure it is rootful to bind to port 53
if [ "$(uname)" = "Darwin" ]; then
  printf -- 'Not ready on MacOS\n'
  exit 1
else
  if [ "$(id -u)" -ne 0 ]; then
    printf -- 'You must run this as a rootful container\n'
    exit 1
  fi
fi

# Prep the directories
readonly _mount1="/usr/local/etc/containers/${_name}/tunnel"
mkdir -p "${_mount1}" || exit 1

# We need DAC_OVERRIDE since the tunnel runs as non-rot
# but our host files are owned by root
_caps="--cap-add DAC_OVERRIDE"

# If no cmd args are passed, run the default tunnel
if [ "$#" -le 0 ]; then
  _run="tunnel run containers"
else
  _run="$*"
fi

# Log the commands we use next
# Fail on errors
# Fail on unassigned
set -xeu

# Don't quote so that if user is empty it still expands
#
# shellcheck disable=SC2086
exec ${_cmd} run ${_how} \
  --name "${_name}" --hostname "${_name}" \
  --security-opt no-new-privileges:true --cap-drop ALL \
  --mount type=bind,source=${_mount1},target=/etc/cloudflared \
  --net=host \
  --cap-add NET_BIND_SERVICE \
  --cap-add NET_ADMIN \
  ${_caps} \
  "${_image}:${_tag}" ${_run}
