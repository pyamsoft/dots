#!/bin/sh

_PROG="$(basename "$0")"
_CONTAINER=""
_COMPOSE_DIR=""
_COMPOSE_FILE=""

_usage() {
  printf -- '%s\n' "$(cat <<EOF

${_PROG} <name>

<name>    name of the container to teardown

Teardown will nicely stop, then remove the container and
associated network

EOF
)"
}

_teardown_container() {
  # Attempt nice stop
  printf -- 'Attempt nice stop container: %s\n' "${_CONTAINER}"
  podman stop -t 5 "${_CONTAINER}" >/dev/null || {
    printf -- 'Failed to nicely stop container %s\n' "${_CONTAINER}"
  }

  # Remove the container
  printf -- '\nAttempt force-remove container: %s\n' "${_CONTAINER}"
  podman rm -f "${_CONTAINER}" >/dev/null || {
    printf -- 'Failed to force remove the container %s\n' "${_CONTAINER}"
    return 1
  }

  # Remove the network
  printf -- '\nAttempt remove container network: %s\n' "${_CONTAINER}"
  podman network rm "${_CONTAINER}" >/dev/null || {
    printf -- 'Failed to remove the container network: %s\n' "${_CONTAINER}"
  }

  printf -- '\nContainer is completely torn down: %s\n' "${_CONTAINER}"
  return 0
}

_is_compose() {
  _COMPOSE_DIR="${HOME}/.local/etc/containers/${_CONTAINER}"
  _COMPOSE_FILE="${_COMPOSE_DIR}/compose.yml"

  # Check that the container location exists
  if [ ! -d "${_COMPOSE_DIR}" ]; then
    return 1
  fi

  # Check that it's compose
  if [ ! -e "${_COMPOSE_FILE}" ]; then
    return 1
  fi

  return 0
}

_teardown_compose() {
  cd "${_COMPOSE_DIR}" || {
    printf -- 'Failed to move into project: %s\n' "${_COMPOSE_DIR}"
    return 1
  }

  printf -- '\nAttempt bring down compose: %s\n' "${_CONTAINER}"
  podman compose --file "${_COMPOSE_FILE}" down -t 5 || {
    printf -- 'Failed to bring down compose: %s\n' "${_CONTAINER}"
    return 1
  }

  printf -- '\nCompose is completely torn down: %s\n' "${_CONTAINER}"
  return 0
}

main() {
  _CONTAINER="$1"

  # Podman expects us to be in a accessible CWD
  cd "${HOME}" || {
    printf -- 'Unable to cd to user HOME for podman usage\n'
    return 1
  }

  if [ -z "${_CONTAINER}" ]; then
    printf -- 'Must provide container name to teardown\n.'
    _usage || return 1
    return 1
  fi

  # Eat name
  shift

  if _is_compose; then
    _teardown_compose || return 1
  else
    _teardown_container || return 1
  fi
  return 0
}

main "$@" || exit 1
exit 0
