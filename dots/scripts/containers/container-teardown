#!/bin/sh

_PROG="$(basename "$0")"

_usage() {
  printf -- '%s\n' "$(cat <<EOF

${_PROG} <name> [--delay]

<name>    name of the container to teardown
--delay   Optional: delay actions by 3 seconds

Teardown will nicely stop, then remove the container and
associated network

EOF
)"
}

main() {
  _name="$1"

  if [ -z "${_name}" ]; then
    printf -- 'Must provide container name to teardown\n.'
    _usage || return 1
    return 1
  fi

  # Eat name
  shift

  # Allow delay
  if [ -n "$1" ] && [ "$1" = "--delay" ]; then
    printf -- 'Delay teardown action...\n'
    sleep 3 || return 1
  fi

  # Attempt nice stop
  printf -- 'Attempt nice stop container: %s\n' "${_name}"
  podman stop -t 5 "${_name}" >/dev/null || {
    printf -- 'Failed to nicely stop container %s\n' "${_name}"
  }

  # Remove the container
  printf -- '\nAttempt force-remove container: %s\n' "${_name}"
  podman rm -f "${_name}" >/dev/null || {
    printf -- 'Failed to force remove the container %s\n' "${_name}"
    return 1
  }

  # Remove the network
  printf -- '\nAttempt remove container network: %s\n' "${_name}"
  podman network rm "${_name}" >/dev/null || {
    printf -- 'Failed to remove the container network: %s\n' "${_name}"
  }

  printf -- '\nContainer is completely torn down: %s\n' "${_name}"
  return 0
}

main "$@" || exit 1
exit 0
