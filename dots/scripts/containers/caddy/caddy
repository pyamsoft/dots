#!/bin/sh

readonly _name="caddy"
readonly _image="localhost/pyamsoft/caddy"
readonly _tag="latest"

# Use podman, don't use docker
readonly _cmd="podman"

_prep_mounts() {
  readonly _mount1="${HOME}/.local/etc/containers/${_name}/data"
  readonly _mount2="${HOME}/.local/etc/containers/${_name}/config"
  readonly _caddyfile="${HOME}/.local/etc/containers/${_name}/Caddyfile"

  mkdir -p "${_mount1}" || return 1
  mkdir -p "${_mount2}" || return 1

  _mounts=""
  _mounts="${_mounts} --mount type=bind,source=${_mount1},target=/data"
  _mounts="${_mounts} --mount type=bind,source=${_mount2},target=/config"
  _mounts="${_mounts} --mount type=bind,source=${_caddyfile},target=/etc/caddy/Caddyfile"

  readonly _mounts
  return 0
}

_prep_caps() {
  _caps=""

  # No caps

  readonly _caps
  return 0
}

_prep_ports() {
  _ports=""

  readonly _ports
  return 0
}

_check_user() {
  if [ "$(id -u)" -eq 0 ]; then
    printf -- 'You must run this as a rootless container\n'
    return 1
  fi

  # Need this userns option that is podman specific or we have random OCI permission error
  _userns="--userns keep-id"
  readonly _userns

  return 0
}

_check_health() {
  _health=""

  # systemd does not like spawning this healthcheck
  if [ "$(uname)" != "Darwin" ]; then
    _health="--health-cmd none"
  fi

  readonly _health

  return 0
}

_containerize() {
  # Log the commands we use next
  # Fail on errors
  # Fail on unassigned
  set -xeu

  # Don't quote so that if user is empty it still expands
  #
  # shellcheck disable=SC2086
  exec ${_cmd} run ${_how} \
    --name "${_name}" --hostname "${_name}" \
    --security-opt no-new-privileges:true --cap-drop ALL \
    --net=host \
    ${_mounts} \
    ${_ports} \
    ${_caps} \
    ${_userns} \
    ${_health} \
    "${_image}:${_tag}" "$@"
}

main() {
  _check_user || return 1
  _check_health || return 1
  _prep_mounts || return 1
  _prep_ports || return 1
  _prep_caps || return 1

  # How do we run?
  if [ "$1" = "-d" ] || [ "$1" = "--detach" ]; then
    shift
    _how="-d --restart=unless-stopped"
  else
    _how="--rm -i -t"
  fi
  readonly _how

  _containerize "$@" || return 1
  return 0
}

main "$@" || exit 1
exit 0

