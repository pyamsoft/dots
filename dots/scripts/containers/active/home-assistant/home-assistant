#!/bin/sh

readonly _name="home-assistant"
readonly _image="ghcr.io/home-assistant/home-assistant"
readonly _tag="stable"

# Use podman, don't use docker
readonly _cmd="podman"

_prep_mounts() {
  readonly _mount1="/usr/local/etc/containers/${_name}/config"

  mkdir -p "${_mount1}" || return 1

  _mounts=""
  _mounts="${_mounts} --mount type=bind,source=${_mount1},target=/config"

  # For bluetooth
  _mounts="${_mounts} --mount type=bind,source=/run/dbus,target=/run/dbus"

  readonly _mounts
  return 0
}

_prep_caps() {
  _caps=""

  # No caps

  readonly _caps
  return 0
}

_prep_ports() {
  _ports=""

  # Host networking
  _ports="${_ports} --network=host"

  readonly _ports
  return 0
}

_check_user() {
  if [ "$(id -u)" -ne 0 ]; then
    printf -- 'You must run this as a rootfull container\n'
    return 1
  fi

  # Need this userns option that is podman specific or we have random OCI permission error
  _userns=""
  readonly _userns

  return 0
}

_containerize() {
  _ha=""

  # Source the runtime config (so we don't have to hardcode keys)
  _runconf="/usr/local/etc/containers/${_name}/runconfig.env"
  if [ ! -e "${_runconf}" ]; then
    printf -- 'You must provide %s\n' "${_runconf}"
    return 1
  fi

  # Source the file into the environment
  # shellcheck disable=SC1090
  . "${_runconf}" || return 1
  unset _runconf

  # Log the commands we use next
  # Fail on errors
  # Fail on unassigned
  set -xeu

  # Don't quote so that if user is empty it still expands
  #
  # shellcheck disable=SC2086
  exec ${_cmd} run ${_how} \
    --name "${_name}" --hostname "${_name}" \
    --security-opt no-new-privileges:true --cap-drop ALL \
    --add-host "localhost:127.0.0.1" \
    --add-host "host.containers.internal:host-gateway" \
    --dns "1.1.1.1" \
    --dns-search=. \
    --privileged \
    ${_ha} \
    ${_mounts} \
    ${_ports} \
    ${_caps} \
    ${_userns} \
    "${_image}:${_tag}" "$@"
}

main() {
  _check_user || return 1
  _prep_mounts || return 1
  _prep_ports || return 1
  _prep_caps || return 1

  # How do we run?
  if [ "$1" = "-d" ] || [ "$1" = "--detach" ]; then
    shift
    _how="-d --restart=unless-stopped"
  else
    _how="--rm -i -t"
  fi
  readonly _how

  _containerize "$@" || return 1
  return 0
}

main "$@" || exit 1
exit 0
