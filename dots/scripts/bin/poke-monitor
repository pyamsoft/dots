#!/bin/sh

# DisplayPort monitor sometimes does not turn back on upon resume
# Poke it via xrandr to see if it will re-activate willingly.
#
# https://wiki.archlinux.org/title/Xrandr_

_setup()
{
  _uid="$(id -u)"
  if [ "${_uid}" -eq 0 ]; then
    printf -- 'You must run this script as your normal user, not root!\n'
    exit 1
  fi

  # Make an assumption about our Xorg environment
  if [ -f "/run/user/${_uid}/gdm/Xauthority" ]; then
    printf -- 'Use GDM Xauthority\n'
    XAUTHORITY="/run/user/${_uid}/gdm/Xauthority"
  else
    printf -- 'Use User Xauthority\n'
    XAUTHORITY="${HOME}/.Xauthority"
  fi

  printf -- 'Adopt XAUTH file: %s\n' "${XAUTHORITY}"
  export XAUTHORITY
}


##
# Poke with display
_poke()
{
  _display="$1"

  # Guess DISPLAY variable to poke
  DISPLAY="${_display}"
  export DISPLAY

  # Attempt countdown
  _count=2

  printf -- 'Attempting to poke monitor via xrandr: %s\n' "${DISPLAY}"
  while [ "${_count}" -gt 0 ]; do
    printf -- 'Poke: %s...\n' "${_count}"
    xrandr > /dev/null 2>&1 || {
      printf -- 'Failed to poke monitor with xrandr: %s\n' "${DISPLAY}"

      unset DISPLAY
      unset _display
      return 1
    }

    # Wait before trying again
    sleep 1
    _count=$((_count - 1))
  done


  printf -- 'Monitor has been poked: %s\n' "${DISPLAY}"

  unset DISPLAY
  unset _display
  return 0
}

main()
{
  # Try poking common monitor DISPLAY connections
  _setup || {
    printf -- 'Failed setup\n'
    return 1
  }

  # Raw console startx
  _poke ":0" && {
    printf -- 'Poked monitor :0\n'
    return 0
  }

  # GDM
  _poke ":1" && {
    printf -- 'Poked monitor :1\n'
    return 0
  }

  # LightDM
  _poke ":7" && {
    printf -- 'Poked monitor :7\n'
    return 0
  }

  # Nothing worked
  printf -- 'Failed all attempts to poke monitor :0 :1 :7\n'
  return 1
}

main "$@" || exit 1
exit 0

